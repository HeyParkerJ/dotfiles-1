#+title:    Email Emacs Configuration
#+author:   Logan Barnett
#+email:    logustus@gmail.com
#+date:     <2018-01-31 Wed 06:48>
#+language: en
#+tags:     email config

* introduction

  There's a lot of benefits to using Emacs to read and write emails.

  1. I can use text and tagging to search for emails easily.
  2. I can keep keybindings that I am familiar with for both reading and writing
     emails.
  3. Copying text out of emails is easy.
  4. Writing emails can be done with =org-mode=, which means I can use code for
     composing some parts of emails.
  5. I can handle GPG encryption automatically.
  6. My emails can be stored in some universal open source format.
  7. Color scheme is dark.

  Reading and writing email is kind of the holy grail of Emacs configurations.
  Emacs can author emails in =org-mode= and then export them to some email
  format. Amusingly, I think one of the bigger reasons I want email inside of
  emacs right now is the combined vim bindings plus a dark color scheme. Once I
  have replaced Apple Mail as my primary email client, all I have remaining as a
  major hurdle is Apple Calendar, which I think I can replace with Emacs as well
  (but in time).

* tools used
** isync

   =isync= is a library/tool that syncs with an IMAP account (Gmail speaks
   IMAP). =isync= isn't the name of the executable itself. Instead this is
   =mbsync=, and generally I use it with =mbsync -a=. I've found a few blog
   posts to help get me started.

** mu4e

   =mu4e= is the Emacs interface for =mu=, which does email tagging and
   searching. I haven't set this up yet. I found a Spacemacs layer for it as
   [[https://github.com/cmiles74/spacemacs-notmuch-layer][spacemacs-notmuch-layer]]. It needs =mu= itself installed.

   I do have =mu= installed.

**** archiving
     Archiving in =mu4e='s vernacular is "refile". We can set the folder to go
     to the "all mail" folder and then it will work like it should for =gmail=.
#+begin_src emacs-lisp
(defun config/mu4e-set-archive-folder ()
  (setq-default mu4e-refile-folder "/gmail/[Gmail]/.All Mail")
)
#+end_src

**** mail dir
     By default =mu4e= looks for =~/Maildir= which is not where I have my mail
     synced.

#+begin_src emacs-lisp
(defun config/mu4e-set-maildir ()
  (setq-default mu4e-maildir (expand-file-name "~/mail"))
  (setq-default mu4e-change-filenames-when-moving t)
)
#+end_src

**** materials
http://pragmaticemacs.com/emacs/fixing-duplicate-uid-errors-when-using-mbsync-and-mu4e/
http://pragmaticemacs.com/emacs/migrating-from-offlineimap-to-mbsync-for-mu4e/
https://github.com/syl20bnr/spacemacs/issues/6028 - I ran into this issue and
needed to modify the package directly.
http://pragmaticemacs.com/emacs/master-your-inbox-with-mu4e-and-org-mode/

**** images

     Turning on image support is simple.

#+begin_src emacs-lisp
(defun config/mu4e-enable-images ()
  (setq-default mu4e-view-show-images t)
  (setq-default mu4e-view-prefer-html t)
  ;; I think this needs to be registered first? Ensures.
  (when (fboundp 'imagemagick-register-types)
    (imagemagick-register-types))
  )
#+end_src

**** TODO add =get-mail= command to mu4e update command
     http://spacemacs.org/layers/+email/mu4e/README.html#configuration

     I should also look at other interesting settings there too.
**** TODO encryption and GPG key
**** getting mail
  =~/bin/mail-sync= gets email and then runs =mu= to perform indexing. This is
  =mu4e= seems to run indexing on its own, so we can just use =mbsync -a= like
  =mail-sync= uses.

#+begin_src emacs-lisp
(defun config/mu4e-sync ()
  (setq-default mu4e-get-mail-command "mbsync -a")
)
#+end_src

**** sending mail

#+begin_src emacs-lisp
  (defun config/send-email ()
    ;; TODO: Many settings are inherited from ../lisp/config-email.el - move them
    ;; here.
    (setq-default
      user-mail-address "logustus@gmail.com"
      user-full-name "Logan Barnett"
      message-send-mail-function 'smtpmail-send-it
      starttls-use-gnutls t
      smtpmail-starttls-credentials '(("smtp.gmail.com" 587 nil nil))
      smtpmail-auth-credentials
        '(("smtp.gmail.com" 587 "logustus@gmail.com" nil))
      smtpmail-default-smtp-server "smtp.gmail.com"
      smtpmail-smtp-server "smtp.gmail.com"
      smtpmail-smtp-service 587
      )
  )
  ;; This allows using `dired' to add attachments. When in `dired-mode', use
  ;; `gnus-dired-attach'. Instructions are more complicated but I'm not sure what
  ;; they are adding since the below is all I needed. See:
  ;; https://www.djcbsoftware.nl/code/mu/mu4e/Dired.html#Dired
  (add-hook 'dired-mode-hook 'turn-on-gnus-dired-mode)
#+end_src

**** bookmarks
     Bookmarks are the initial =b= shortcuts that quickly let me jump to certain
     views. It doesn't come with one that just shows your inbox. I'm not a fan
     of looking at "today's" email unless I can make sure I handle everything in
     a single day.

     #+begin_src emacs-lisp
       (defun config/mu4e-add-bookmarks ()
         "Add mu4e bookmarks."
         (add-to-list 'mu4e-bookmarks
           (make-mu4e-bookmark
             :name  "inbox"
             :query "maildir:/gmail/Inbox"
             :key ?i))
       )
     #+end_src

     Bookmarks can contain lisp expressions as well as parameters in the queries
     themselves.

     [[https://www.djcbsoftware.nl/code/mu/mu4e/Bookmarks.html][mu4e bookmarks docs]]

**** apply mu4e

#+begin_src emacs-lisp
  (require 'use-package)
  (message "initializing mu4e with use-package...")
  (use-package "mu4e"
    :config
    (message "initializing mu4e...")
    (config/mu4e-add-bookmarks)
    (config/mu4e-enable-images)
    (config/mu4e-set-maildir)
    (config/mu4e-set-archive-folder)
    (config/mu4e-sync)
    (config/send-email)
    (message "done initializing mu4e")
  )
#+end_src


** notmuch

   =notmuch= is installed as a =spacemacs= layer. There's a
   [[https://github.com/cmiles74/spacemacs-notmuch-layer][spacemacs-notmuch-layer]] repository for this, as it is not built in. Not much
   is just a way of navigating and tagging emails. It doesn't handle the
   syncing.

   Aside from the layer linked above, there's also a =notmuch= layer sitting in
   the =develop= branch of Spacemacs [[https://github.com/syl20bnr/spacemacs/issues/2163][spacemacs #2163]]. It has not made its way to
   a release branch yet.

*** keybindings

    The keybindings here are in sore need of love for something that works for
    my muscle memory.

    |   |   |   |
    |---+---+---|
    | s |   | search emails |
    |   |   |   |
    |   |   |   |
    |   |   |   |

* research

  - [[https://www.reddit.com/r/emacs/comments/4rl0a9/email_in_emacs_i_want_to_but_wow_its_overwhelming/d52q08p/][IceDane's Emacs email setup]] :: =IceDane= has very good rationale of the
       setup they use and goes through all of the things they have tried. I want
       to closely follow this setup.
  - [[https://notmuchmail.org/notmuch-emacs/][notmuch Emacs interface]] :: Official documentation for using =notmuch= with
       Emacs.
  - [[https://wiki.archlinux.org/index.php/Isync][ArchLinux isync config]] :: Tutorial on setting up =isync=.
  - [[http://www.ict4g.net/adolfo/notes/2014/12/27/emacs-imap.html][Adolfo Villafiorita's IMAP in Emacs + MacOS setup]] :: This has been a rich
       trove of information about a setup similar to =IceDane='s. It includes a
       little bit alternatives and also different approaches with additional
       passes on existing configs (such as adding oauth support via Gmail).
  - [[https://www.reddit.com/r/emacs/comments/7me0vn/help_configuring_mbsyncrc_for_gmail_on_osx/][isync "unknown section keyword" problem]] :: I ran into this problem. The fix
       is that sections are grouped together by a lack of an extra line break.
       Extra linebreak (two in a row) means there's a new section.
  - [[https://docwhat.org/el-capitan-and-the-evils-of-openssl/][OpenSSL and CertificateFile]] :: Homebrew provides a pem file that can be used
       in the =CertificateFile= field for =.mbsyncrc= (=isync='s config file).
       This gives us the root certificate authority needed to establish a chain
       of trust with gmail's certificates.

* alternative tools

*** gnus

    I have tried =gnus= which is built into Spacemacs as a layer. =gnus= is
    meant as more of an RSS aggregator than anything else. I had a lot of
    trouble syncing with Gmail, writing emails, and reading them. The
    documentation for evilication is sparse at best, and I just get the feel
    that while using =gnus= for email is clever, it just feels like stretching a
    tool to be something it isn't.
* reference

- [[https://www.emacswiki.org/emacs/NotMuch][Emacs Wiki - NotMuch]] :: Has some scripts that might be helpful later, and
     links to other sources and integrations with other tools.
- [[https://github.com/tjim/nevermore][nevermore]] :: A =notmuch= interface for Emacs. I'm not sure what it provides
     over the =notmuch= official Emacs plugin yet. =company= support?
- [[https://github.com/cmiles74/spacemacs-notmuch-layer][Spacemacs notmuch layer]] :: =notmuch= for Spacemacs. Use =SPC a n= to activate.
- [[https://notmuchmail.org/notmuch-emacs/][notmuch-emacs]] :: Official docs on setting up =notmuch= with Emacs.
* artifacts
