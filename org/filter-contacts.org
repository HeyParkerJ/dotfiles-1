#+title:     Filter contacts
#+author:    Logan Barnett
#+email:     logustus@gmail.com
#+date:      <2019-09-11 Wed>
#+language:  en
#+file_tags: contacts org-contacts mu
#+tags:

* problem
  =mu= can emit =org-contact= formatted contact lists, which it builds from its
  emails. Unfortunately this list is somewhat poorly filtered. Ideally I could
  filter out junk mail sources, but that's only part of the story. I don't
  necessarily want every email generating a contact, as a massive list of
  contacts will make generating a contact database take minutes or hours.
  Keeping the list under 3000 seems to be quick enough.

* filtering
** mu
   mu's regular expression system seems to have some bugs in it, and I cannot do
   a regular expression negative match reliably. It's hard to tell, but it seems
   to fail to match (or not match) consistently.
** cli
   I can rely upon grep to do a negative match with =-v= , but this only works
   if we use a CSV export. From that CSV I need to import them.

*** filters
    #+name: filters
    - access
    - account
    - admin
    - alert
    - allstate
    - announce
    - att_update
    - auto
    - benefits
    - beta
    - billing
    - billpay
    - calendar
    - cash
    - claim
    - commit
    - communications@
    - confirm
    - consumers
    - contact
    - craigslist
    - customer
    - daemon
    - deals
    - dev@
    - development@
    - emails@
    - event
    - everyone
    - example
    - facebookmail
    - feedback
    - financial
    - go2uti
    - group
    - hello
    - help
    - hilton
    - hiring
    - info
    - jira@
    - jobs
    - johndoe
    - kenai
    - linkedin
    - listing
    - login
    - mail@
    - manager@
    - marketplace
    - meetup
    - member@
    - nbusers
    - netbeans
    - news
    - nobody
    - notice
    - notif
    - offer
    - ops
    - orders
    - paperless
    - password
    - pinterest
    - postmaster
    - product
    - promo
    - receipt
    - recruit
    - registration
    - reminder
    - renewal
    - reply
    - reserv
    - response
    - retail
    - returns
    - review
    - reward
    - roku@
    - ruby-lang
    - rubyforge
    - sales
    - security
    - service
    - shipping
    - shop
    - snmp4j
    - socialmedia
    - store
    - subscri
    - support
    - survey
    - system@
    - talent
    - team@
    - ticket
    - travis-ci
    - trends
    - update
    - users@
    - verify
    - vresp
    - webinar
    - webmaster
    - website
    - welcome
    - workout
    - xbox
    - zillow

*** regex OR
    #+name: piped-names
    #+begin_src emacs-lisp :var names=filters[,0]
      (string-join names "|")
    #+end_src

    #+RESULTS: piped-names
    : billing|reply|offer|group|info|product|news|alert|receipt|reward|support|calendar|event|help|marketplace|notif|confirm

*** filter from mu
    #+name: find-and-filter
    #+begin_src shell :noweb yes
      mu cfind --format=csv --personal | grep -i -E -v "<<piped-names()>>"
    #+end_src
*** test with a count
    Run this one to get a count of the contacts after being filtered. This is a
    good test to see how well the match occurred.

    #+name: count-find-and-filter
    #+begin_src shell :noweb yes :var names=piped-names
      <<find-and-filter>> | wc -l
    #+end_src

    #+RESULTS: count-find-and-filter
    : 2223

*** test csv output
    #+name: test-find-and-filter
    #+begin_src shell :noweb yes :results value drawer
      <<find-and-filter>> | tail -n 12
    #+end_src

    #+RESULTS: test-find-and-filter
    :results:
    Warhammer Digital,digital@gwplc.com
    ,logan@battlementgames.com
    Jeremy Earl,mr_mooph@yahoo.com
    AT&T,att@e.att-mail.com
    Teri Summers,terisummers@cox.net
    ,LORIANN1969@gmail.com
    ,admin@atlantisremixed.org
    TechSmith,email@techsmith.messages4.com
    ChargePoint,driver-summary@chargepoint.com
    Adrian Cinta,adrian.cinta@gmail.com
    SmartCarry® the Invisible Holster,smartcarry@gmail.com
    Jim Owens,jimandfifi@cox.net
    :end:

    From here, the format appears as =<name>,<email>=, and =name= can be blank.
    Getting a blank =email= is nonsensical.

    The format I need to produce is like this:

    #+begin_src org
      ,* name
        :PROPERTIES:
        :EMAIL:    email
        :END:
    #+end_src

*** csv to org
    For this, I should be able to use =sed=.

    #+name: format
    #+begin_src shell :noweb yes :results none
      <<find-and-filter>> | sed -E $'s/^(.*),(.+)$/* \\1\\\n:PROPERTIES:\\\n:EMAIL: \\2\\\n:END:\\\n/'
    #+end_src

**** test
     #+name: test-format
     #+begin_src shell :noweb yes :results value org :hlines yes
       <<format>> | tail -n 11
     #+end_src

     #+RESULTS: test-format
     #+begin_src org

       ,* SmartCarry® the Invisible Holster
         :PROPERTIES:
         :EMAIL:    smartcarry@gmail.com
         :END:

       ,* Jim Owens
         :PROPERTIES:
         :EMAIL:    jimandfifi@cox.net
         :END:

     #+end_src

*** final format
    Be ware, this will destroy anything in =contacts.org=. I should find a smarter
    way to generate this data!
    #+name: do-format
    #+begin_src shell :noweb yes :results value :file ~/Dropbox/notes/contacts.org
      <<format>>
    #+end_src

    #+RESULTS: do-format
    [[file:~/Dropbox/notes/contacts.org]]
