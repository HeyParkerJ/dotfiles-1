#+title:    Tramp Emacs Config
#+author:   Logan Barnett
#+email:    logustus@gmail.com
#+date:     <2018-03-07 Wed>
#+language: en
#+tags:     config tramp ssh remote

* shell settings

Tramp logs in via =ssh= as one of its modes. When it does so, it interacts with
the shell over =ssh=. It doesn't understand custom prompts very well, let alone
things specific to =zsh=. Generally Tramp expects =bash=. This setting makes
Tramp use bash regardless of what the remote machine is set to use.

#+begin_src emacs-lisp
;; (setq-default explicit-shell-file-name "/bin/bash")
#+end_src

* debugging

Tramp can be debugged with a verbose number. I know you can set it as high as 6.

#+begin_src emacs-lisp
  (defun set-tramp-logging ()
    (setq-default tramp-verbose 6)
  )
#+end_src

* ls and dired
Need to override this function because =cmd= is defined with =ls= first instead
of =gls= and there are no other means of overriding.

#+begin_src emacs-lisp
(defun override-tramp-get-ls-command ()
  (defun tramp-get-ls-command (vec)
    "Determine remote `ls' command."
    (message "Using monkey patched tramp-get-ls-command")
    (with-tramp-connection-property vec "ls"
      (tramp-message vec 5 "Finding a suitable `ls' command")
      (or
      (catch 'ls-found
        (dolist (cmd '("gls" "gnuls" "ls"))
    (let ((dl (tramp-get-remote-path vec))
          result)
      (while (and dl (setq result (tramp-find-executable vec cmd dl t t)))
        ;; Check parameters.  On busybox, "ls" output coloring is
        ;; enabled by default sometimes.  So we try to disable it
        ;; when possible.  $LS_COLORING is not supported there.
        ;; Some "ls" versions are sensible wrt the order of
        ;; arguments, they fail when "-al" is after the
        ;; "--color=never" argument (for example on FreeBSD).
        (when (tramp-send-command-and-check
          vec (format "%s -lnd /" result))
          (when (tramp-send-command-and-check
            vec (format
          "%s --color=never -al /dev/null" result))
      (setq result (concat result " --color=never")))
          (throw 'ls-found result))
        (setq dl (cdr dl))))))
      (tramp-error vec 'file-error "Couldn't find a proper `ls' command"))))
      )
#+end_src
* all together

#+begin_src emacs-lisp
  (require 'use-package)
  (use-package "tramp"
    :init
    :config
    (set-tramp-logging)
    (setq-default insert-directory-program "/usr/local/bin/gls")
    (setq-default dired-use-ls-dired t)
    (setq-default dired-listing-switches "-al")
    (setq-default tramp-ssh-controlmaster-options
    "-o ControlMaster=auto -o ControlPath='tramp.%%C' -o ControlPersist=no")
    ;; (override-tramp-get-ls-command)
  )

#+end_src
